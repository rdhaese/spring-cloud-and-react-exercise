<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<modules>
		<module>student-service</module>
		<module>course-service</module>
		<module>address-service</module>
		<module>cost-service</module>
		<module>config-server</module>
		<module>eureka-server</module>
        <module>commons</module>
		<module>zuul-server</module>
        <module>auth-server</module>
    </modules>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.12.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.rdhaese</groupId>
	<artifactId>spring-cloud-and-react-exercise</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-cloud-and-react-exercise</name>
	<description>An exercise project for spring cloud and react</description>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<version.com.rdhaese.commons>0.0.1-SNAPSHOT</version.com.rdhaese.commons>
		<version.org.springframework.boot.spring-boot-devtools>2.3.12.RELEASE</version.org.springframework.boot.spring-boot-devtools>
		<version.org.springframework.boot.spring-boot-starter-test>2.3.12.RELEASE</version.org.springframework.boot.spring-boot-starter-test>
		<version.org.springdoc.springdoc-openapi-ui>1.5.9</version.org.springdoc.springdoc-openapi-ui>
		<version.org.hibernate.hibernate-jpamodelgen>5.5.3.Final</version.org.hibernate.hibernate-jpamodelgen>
		<version.org.spockframework.spock-core>2.0-groovy-3.0</version.org.spockframework.spock-core>
		<version.org.spockframework.spock-spring>2.0-groovy-3.0</version.org.spockframework.spock-spring>
		<version.org.codehaus.groovy.groovy-all>3.0.8</version.org.codehaus.groovy.groovy-all>
		<!-- Somewhere, something, used this pre-defined property at version 2.5.x, making the gmaven plugin ignore the 3.0.8 dependency
		Setting this property manually to 3.0.8 helps -->
		<groovy.version>3.0.8</groovy.version>

		<version.org.codehaus.gmavenplus.gmavenplus-plugin>1.12.1</version.org.codehaus.gmavenplus.gmavenplus-plugin>
		<version.org.springframework.cloud.spring-cloud-config-server>2.2.8.RELEASE</version.org.springframework.cloud.spring-cloud-config-server>
		<version.org.springframework.cloud.spring-cloud-starter-config>2.2.8.RELEASE</version.org.springframework.cloud.spring-cloud-starter-config>
		<version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-server>2.2.8.RELEASE</version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-server>
		<version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-client>2.2.8.RELEASE</version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-client>
		<version.org.springframework.cloud.spring-cloud-starter-openfeign>2.2.8.RELEASE</version.org.springframework.cloud.spring-cloud-starter-openfeign>
		<version.org.springframework.boot.spring-cloud-starter-netflix-ribbon>2.2.8.RELEASE</version.org.springframework.boot.spring-cloud-starter-netflix-ribbon>
		<version.org.springframework.boot.spring-cloud-starter-netflix-hystrix>2.2.8.RELEASE</version.org.springframework.boot.spring-cloud-starter-netflix-hystrix>
		<version.org.springframework.boot.spring-cloud-starter-netflix-zuul>2.2.8.RELEASE</version.org.springframework.boot.spring-cloud-starter-netflix-zuul>
		<spring-cloud.version>Hoxton.SR11</spring-cloud.version>
	</properties>

	<dependencies>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.rdhaese</groupId>
				<artifactId>commons</artifactId>
				<version>${version.com.rdhaese.commons}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<version>${version.org.springframework.boot.spring-boot-devtools}</version>
				<scope>runtime</scope>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${version.org.springframework.boot.spring-boot-starter-test}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${version.org.springdoc.springdoc-openapi-ui}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${version.org.springframework.cloud.spring-cloud-config-server}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${version.org.springframework.cloud.spring-cloud-starter-config}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-server}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${version.org.springframework.cloud.spring-cloud-starter-netflix-eureka-client}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-openfeign</artifactId>
				<version>${version.org.springframework.cloud.spring-cloud-starter-openfeign}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
				<version>${version.org.springframework.boot.spring-cloud-starter-netflix-ribbon}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
				<version>${version.org.springframework.boot.spring-cloud-starter-netflix-hystrix}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
				<version>${version.org.springframework.boot.spring-cloud-starter-netflix-zuul}</version>
			</dependency>


			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>${version.org.spockframework.spock-core}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-spring</artifactId>
				<version>${version.org.spockframework.spock-spring}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${version.org.codehaus.gmavenplus.gmavenplus-plugin}</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>${version.org.codehaus.groovy.groovy-all}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
